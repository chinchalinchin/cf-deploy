########################### AWS ACCOUNT CONFIGURATION ############################
AWS_DEFAULT_REGION=us-east-1
AWS_ACCOUNT_ID=xxxx

##################### CROSS STACK REFERENCE CONFIGURATION ########################
# DEVOPS STACKS
IAM_STACK=IAMStack
REPO_STACK=RepoStack
PIPELINE_STACK=PipelineStack
SONAR_STACK=SonarStack

# APPLICATION STACKS
COGNITO_STACK=CognitoStack
ECR_STACK=ECRStack
FRONTEND_STACK=FrontendStack
VPC_STACK=VPCStack
RDS_STACK=RDSStack
LAMBDA_STACK=LambdaStack
GATEWAY_STACK=GatewayStack
DNS_STACK=DNSStack

############################ IAM CONFIGURATION ####################################
#   NOTE: MASTER_PASSWORD is the initial password given to all IAM users.
MASTER_PASSWORD=xxxx

############################# RDS CONFIGURATION ##################################
#   NOTE: The VPCStack script will generate an SSH key with the name SSS_KEY_NAME
#           in your local user's ~/.ssh/ folder.
RDS_USERNAME=fakeusername
RDS_PASSWORD=fakepassword
SSH_KEY_NAME=tunnel_key

####################### ROUTE53 & CERTIFICATION CONFIGURATION ####################
#   NOTE: If DNS record set exists, the CERTIFICATE_ID and HOSTED_ZONE_ID
#         must set in this environment file. Otherwise, the CCC-DNSStack
#         will need to provision the HostedZone and Certificate.
CERTIFICATE_ID=xxxx
HOSTED_ZONE_ID=xxxxx
DOMAIN=application.com

############################ GATEWAY CONFIGURATION #################################
#   NOTE: By default, Alpha and Beta are nested GET endpoints with a path parameter.
#   NOTE: By default, Gamma and Delta are POST endpoints
#   NOTE: By default, Epsilon is reserved for tokens.
ALPHA_ENDPOINT=alpha
ALPHA_PARAM=alpha_param
BETA_ENDPOINT=beta
BETA_PARAM=beta_param
GAMMA_ENDPOINT=gamma
DELTA_ENDPOINT=delta

########################### APPLICATION CONFIGURATION ###############################
#   NOTE: APPLICATION is used to enforce a naming convention for resources, e.g. this
#           gets appended to secrets, ECRs, Lambdas, etc.
#   NOTE: If an API key needs delivered to the Lambda environments, update API_KEY
#           and invoke ./scripts/secret-api-key --environment <Dev | Staging | Test | Prod >
#           before standing up the LambdaStack. The lines in the lambda.yml for the API_KEY
#           will need uncommented.
#  NOTE: In order to scan application's security vulnerabilities, this SNKY_TOKEN will
#        need delivered to the CodeBuild environment.
#  NOTE: SONAR_TOKEN will need generated after SonarStack goes up. The token will need put 
#        into AWS SecretManager before the PipelineStack goes up. This secret is ingested in
#        the Pipeline CloudFormation template.
APPLICATION=application
API_KEY=xxx
SNYK_TOKEN=xxx
SONAR_TOKEN=xxx