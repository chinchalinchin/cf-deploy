#!/bin/bash

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
SCRIPT_NAME="rds-stack"
SCRIPT_DES=$''
PROJECT_DIR=$SCRIPT_DIR/../../..
source $PROJECT_DIR/.env

# Example Usage:
# >$     rds-stack --environment <Dev | Prod | Test> --action <action | update>

function log(){
    echo -e "\e[92m$(date +"%r")\e[0m: \e[4;32m$SCRIPT_NAME\e[0m : >> $1"
}

function help(){
    echo -e "\n\e[4m$SCRIPT_NAME\e[0m\n\n\t$SCRIPT_DES" 
}

while [[ $# -gt 0 ]]; do
       key="$1"
       case $key in
                --action)
                    ACTION="$2"
                    shift
                    shift 
                    ;;
                --help)
                    help
                    exit 0
                    ;;
                --environment)
                    ENVIRONMENT="$2"
                    shift
                    shift
                    ;;
                *)
                    log "Input not understood. See \e[3m--help\e[0m for information on using this command."
                    exit 1
                    ;;
       esac
done

if [ -z "$ACTION" ]
then
    ACTION="create"
fi

cp $PROJECT_DIR/templates/app/rds.yml ./rds.yml

if [ "$ACTION" == "create" ]
then
    # NOTE: use `create-secret` command if secrets do not exist in the SecretManager.
    #       use `update-secret` if updating

    # NOTE: if the RDS stack needs torn down, you won't be able to delete the secrets
    #       right away due to the deletion policy on AWS, so when you restand up the 
    #       stack, the secrets will still exist in the SecretsManager, and you will
    #       want to use `update-secret` instead of `create-secret`
    
    aws secretsmanager create-secret --name "${APPLICATION}-${ENVIRONMENT}-dbUsername" \
                                     --description "Database Username Secret for ${ENVIRONMENT} environment" \
                                     --secret-string $RDS_USERNAME

    # aws secretsmanager update-secret --secret-id "${APPLICATION}-${ENVIRONMENT}-dbUsername" \
      #                               --description "Database Username Secret for ${ENVIRONMENT} environment" \
       #                              --secret-string $RDS_USERNAME

    aws secretsmanager create-secret --name "${APPLICATION}-${ENVIRONMENT}-dbPassword" \
                                     --description "Database Password Secret for ${ENVIRONMENT} environment" \
                                     --secret-string $RDS_PASSWORD

    #aws secretsmanager update-secret --secret-id "${APPLICATION}-${ENVIRONMENT}-dbPassword" \
     #                                --description "Database Password Secret for ${ENVIRONMENT} environment" \
      #                               --secret-string $RDS_PASSWORD



    aws cloudformation create-stack --stack-name "${APPLICATION^}-${RDS_STACK}-${ENVIRONMENT}" \
                                    --template-body file://rds.yml \
                                    --capabilities CAPABILITY_NAMED_IAM \
                                    --parameters ParameterKey=environmentName,ParameterValue=$ENVIRONMENT \
                                                 ParameterKey=applicationName,ParameterValue=$APPLICATION \
                                                 ParameterKey=vpcStack,ParameterValue="${APPLICATION^}-${VPC_STACK}-${ENVIRONMENT}" \
                                                 ParameterKey=iamStack,ParameterValue="${APPLICATION^}-${IAM_STACK}"
elif [ "$ACTION" == "update" ]
then
    aws cloudformation update-stack --stack-name "${APPLICATION^}-${RDS_STACK}-${ENVIRONMENT}" \
                                    --template-body file://rds.yml \
                                    --capabilities CAPABILITY_NAMED_IAM \
                                    --parameters ParameterKey=environmentName,ParameterValue=$ENVIRONMENT \
                                                 ParameterKey=applicationName,ParameterValue=$APPLICATION \
                                                 ParameterKey=vpcStack,ParameterValue="${APPLICATION^}-${VPC_STACK}-${ENVIRONMENT}" \
                                                 ParameterKey=iamStack,ParameterValue="${APPLICATION^}-${IAM_STACK}"
elif [ "$ACTION" == "delete" ]
then
    aws cloudformation delete-stack --stack-name "${APPLICATION^}-${RDS_STACK}-${ENVIRONMENT}"
fi

rm ./rds.yml