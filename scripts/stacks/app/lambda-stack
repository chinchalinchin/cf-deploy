#!/bin/bash

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
SCRIPT_NAME="lambda-stack"
SCRIPT_DES=$''
PROJECT_DIR=$SCRIPT_DIR/../../..
source $PROJECT_DIR/.env

# Example Usage:
# >$     lambda-stack --components <one | two | three | four | five> \
#                     --environment <Dev | Prod | Test | Staging> \
#                     --action <create | update | delete>

#      NOTE: ``--action`` defaults to `create` if not supplied.

function log(){
    echo -e "\e[92m$(date +"%r")\e[0m: \e[4;32m$SCRIPT_NAME\e[0m : >> $1"
}

function help(){
    echo -e "\n\e[4m$SCRIPT_NAME\e[0m\n\n\t$SCRIPT_DES" 
}

while [[ $# -gt 0 ]]; do
       key="$1"
       case $key in
              --action)
                     ACTION="$2"
                     shift
                     shift 
                     ;;
              --components)
                     COMPONENTS="$2"
                     shift
                     shift
                     ;;
              --environment)
                     ENVIRONMENT="$2"
                     shift
                     shift
                     ;;
              --help)
                     help
                     exit 0
                     ;;
              *)
                     log "Input not understood. See \e[3m--help\e[0m for information on using this command."
                     exit 1
                     ;;
       esac
done

if [ -z "$ACTION" ]
then
    ACTION="create"
fi

cp $PROJECT_DIR/templates/app/lambda.yml ./lambda.yml

if [ "$ACTION" == "create" ]
then
       aws cloudformation create-stack \
              --stack-name "${APPLICATION^}-${LAMBDA_STACK}-${ENVIRONMENT}" \
              --template-body file://lambda.yml \
              --parameters ParameterKey=components,ParameterValue=$COMPONENTS \
                            ParameterKey=environmentName,ParameterValue=$ENVIRONMENT \
                            ParameterKey=applicationName,ParameterValue=$APPLICATION \
                            ParameterKey=ecrStack,ParameterValue="${APPLICATION^}-${ECR_STACK}" \
                            ParameterKey=iamStack,ParameterValue="${APPLICATION^}-${IAM_STACK}" \
                            ParameterKey=cognitoStack,ParameterValue="${APPLICATION^}-${COGNITO_STACK}" \
                            ParameterKey=vpcStack,ParameterValue="${APPLICATION^}-${VPC_STACK}-${ENVIRONMENT}" \
              --capabilities CAPABILITY_NAMED_IAM

elif [ "$ACTION" == "update" ]
then
       aws cloudformation update-stack \
              --stack-name "${APPLICATION^}-${LAMBDA_STACK}-${ENVIRONMENT}" \
              --template-body file://lambda.yml \
              --parameters ParameterKey=components,ParameterValue=$COMPONENTS \
                            ParameterKey=environmentName,ParameterValue=$ENVIRONMENT \
                            ParameterKey=applicationName,ParameterValue=$APPLICATION \
                            ParameterKey=ecrStack,ParameterValue="${APPLICATION^}-${ECR_STACK}" \
                            ParameterKey=iamStack,ParameterValue="${APPLICATION^}-$IAM_STACK" \
                            ParameterKey=cognitoStack,ParameterValue="${APPLICATION^}-${COGNITO_STACK}" \
                            ParameterKey=vpcStack,ParameterValue="${APPLICATION^}-${VPC_STACK}-${ENVIRONMENT}" \
              --capabilities CAPABILITY_NAMED_IAM  
              
elif [ "$ACTION" == "delete" ]
then 
       aws cloudformation delete-stack \
              --stack-name "${APPLICATION^}-${LAMBDA_STACK}-${ENVIRONMENT}"
fi

rm ./lambda.yml