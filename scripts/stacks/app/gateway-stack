#!/bin/bash

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
SCRIPT_NAME="rds-stack"
SCRIPT_DES=$''
PROJECT_DIR=$SCRIPT_DIR/../../..
source $PROJECT_DIR/.env

# Example Usage:
# >$     gateway-stack --environment <Dev | Prod | Test | Staging> \
#                      --action <create | update | delete>
#
# NOTE: if no `--action` is provided, it will default to `create`

function log(){
    echo -e "\e[92m$(date +"%r")\e[0m: \e[4;32m$SCRIPT_NAME\e[0m : >> $1"
}

function help(){
    echo -e "\n\e[4m$SCRIPT_NAME\e[0m\n\n\t$SCRIPT_DES" 
}

while [[ $# -gt 0 ]]; do
       key="$1"
       case $key in
            --action)
                ACTION="$2"
                shift
                shift 
                ;;
            --help)
                help
                exit 0
                ;;
            --environment)
                ENVIRONMENT="$2"
                shift
                shift
                ;;
            *)
                log "Input not understood. See \e[3m--help\e[0m for information on using this command."
                exit 1
                ;;
       esac
done

if [ -z "$ACTION" ]
then
    ACTION="create"
fi

cp $PROJECT_DIR/templates/app/gateway.yml ./gateway.yml

if [ "$ACTION" == "create" ]
then
    aws cloudformation create-stack \
        --stack-name "${APPLICATION^}-${GATEWAY_STACK}-${ENVIRONMENT}" \
        --template-body file://gateway.yml \
        --parameters ParameterKey=environmentName,ParameterValue=$ENVIRONMENT \
                     ParameterKey=alphaEndpoint,ParameterValue=$ALPHA_ENDPOINT \
                     ParameterKey=alphaParam,ParameterValue=$ALPHA_PARAM \
                     ParameterKey=betaEndpoint,ParameterValue=$BETA_ENDPOINT \
                     ParameterKey=betaEndpoint,ParameterValue=$BETA_PARAM \
                     ParameterKey=gammaEndpoint,ParameterValue=$GAMMA_ENDPOINT \
                     ParameterKey=deltaEndpoint,ParameterValue=$DELTA_ENDPOINT \
                     ParameterKey=epsilonEndpoint,ParameterValue=$EPSILON_ENDPOINT \
                     ParameterKey=lambdaStack,ParameterValue="${APPLICATION^}-${LAMBDA_STACK}-${ENVIRONMENT}" \
                     ParameterKey=cognitoStack,ParameterValue="${APPLICATION^}-${COGNITO_STACK}" \
                     ParameterKey=iamStack,ParameterValue="${APPLICATION^}-${IAM_STACK}"

elif [ "$ACTION" == "update" ]
then
    aws cloudformation update-stack \
        --stack-name "${APPLICATION^}-${GATEWAY_STACK}-${ENVIRONMENT}" \
        --template-body file://gateway.yml \
        --parameters ParameterKey=environmentName,ParameterValue=$ENVIRONMENT \
                     ParameterKey=alphaEndpoint,ParameterValue=$ALPHA_ENDPOINT \
                     ParameterKey=alphaParam,ParameterValue=$ALPHA_PARAM \
                     ParameterKey=betaEndpoint,ParameterValue=$BETA_ENDPOINT \
                     ParameterKey=betaEndpoint,ParameterValue=$BETA_PARAM \
                     ParameterKey=gammaEndpoint,ParameterValue=$GAMMA_ENDPOINT \
                     ParameterKey=deltaEndpoint,ParameterValue=$DELTA_ENDPOINT \
                     ParameterKey=epsilonEndpoint,ParameterValue=$EPSILON_ENDPOINT 
                     ParameterKey=lambdaStack,ParameterValue="${APPLICATION^}-${LAMBDA_STACK}-${ENVIRONMENT}" \
                     ParameterKey=cogntioStack,ParameterValue="${APPLICATION^}-${COGNITO_STACK}" \
                     ParameterKey=iamStack,ParameterValue="${APPLICATION^}-${IAM_STACK}"


elif [ "$ACTION" == "delete" ]
then
    aws cloudformation delete-stack \
        --stackname "${APPLICATION^}-${GATEWAY_STACK}-${ENVIRONMENT}"
else
    log "Action not understood."
    exit 1
fi
    
rm ./gateway.yml