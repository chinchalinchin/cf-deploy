#!/bin/bash

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
SCRIPT_NAME="init-coverage-buckets"
SCRIPT_DES=$''
PROJECT_DIR=$SCRIPT_DIR/../..
source $PROJECT_DIR/.env

# Example Usage:
# >$     retrieve-cloudfront-id --environment <Dev | Prod | Staging> --page <frontend | coverage>

# NOTE: ``--environments`` is a comma separated list with no spaces.

function log(){
    echo -e "\e[92m$(date +"%r")\e[0m: \e[4;32m$SCRIPT_NAME\e[0m : >> $1"
}

function help(){
    echo -e "\n\e[4m$SCRIPT_NAME\e[0m\n\n\t$SCRIPT_DES" 
}

while [[ $# -gt 0 ]]; do
    key="$1"
    case $key in
        --action)
            ACTION="$2"
            shift
            shift 
            ;;
        --help)
            help
            exit 0
            ;;
        --environment)
            ENVIRONMENT="$2"
            shift
            shift
            ;;
        --page)
            PAGE="$2"
            shift
            shift
            ;;
        *)
            log "Input not understood. See \e[3m--help\e[0m for information on using this command."
            exit 1
            ;;
    esac
done

if [ "$PAGE" == "frontend" ]
then
    CLOUDFRONT_ID=$(aws cloudformation describe-stacks | jq ".Stacks[] | select(.StackName==\"${APPLICATION^}-${DNS_STACK}-${ENVIRONMENT}\")" | jq '.Outputs[1].OutputValue' | tr -d '"')
elif [ "$PAGE" == "coverage" ]
then
    CLOUDFRONT_ID=$(aws cloudformation describe-stacks | jq ".Stacks[] | select(.StackName==\"${APPLICATION^}-${DNS_STACK}-${ENVIRONMENT}\")" | jq '.Outputs[2].OutputValue' | tr -d '"')
fi

echo "$CLOUDFRONT_ID"