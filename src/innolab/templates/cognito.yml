AWSTemplateFormatVersion: '2010-09-09'

Description: "The first stack of the applicationName application. It will provision all the necessary resources for a Cognito OAUTH authentication flow, such as UserPool, UserPoolClients, UserPoolDomain, etc. It will also provision user accounts for the development team and send them emails to reset their Cognito IDP passwords."

Parameters:
  domainName:
    Type: String
    Default: makpar-innovation.net
    Description: Domain used in the callback registered with the Cognito Auth clients.
  applicationName:
    Type: String
    Default: innolab
    Description: Namespace for the application resources
  environmentName:
    Type: String
    Default: Dev

Mappings:
  SubEnvDomainMap:
    Dev: 
      subdomainEnv:  "-dev"
    Test: 
      subdomainEnv: "-test"
    Staging: 
      subdomainEnv: "-staging"
    Prod: 
      subdomainEnv: ""

Resources:
  AuthDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      UserPoolId: !Ref CognitoUserPool
      Domain: !Ref applicationName
    DependsOn:
      - CognitoUserPool

  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub ${applicationName}-userpool
      UsernameConfiguration:
        CaseSensitive: false
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireSymbols: true
          RequireUppercase: true
          TemporaryPasswordValidityDays: 3
      Schema:
        - AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Name: email
        - AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Name: name
  
  APIClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref CognitoUserPool
      ClientName: !Sub ${applicationName}-api-client
      AllowedOAuthFlows:
        - implicit
      AllowedOAuthScopes:
        - email
        - openid
        - profile
      AllowedOAuthFlowsUserPoolClient: true
      CallbackURLs:
        - !Sub 
          - "https://${subdomain}${subdomainEnv}.${domain}"
          - subdomain: !Ref applicationName
            subdomainEnv: 
              Fn::FindInMap:
                - SubEnvDomainMap
                - !Ref environmentName
                - subdomainEnv
            domain: !Ref domainName
      ExplicitAuthFlows:
        - "ALLOW_CUSTOM_AUTH"
        - "ALLOW_REFRESH_TOKEN_AUTH"
        - "ALLOW_USER_PASSWORD_AUTH"
        - "ALLOW_USER_SRP_AUTH"
      AccessTokenValidity: 60
      IdTokenValidity: 60
      RefreshTokenValidity: 30
      TokenValidityUnits:
        AccessToken: "minutes"
        IdToken: "minutes"
        RefreshToken: "days"
      SupportedIdentityProviders:
        - COGNITO
    DependsOn:
      - CognitoUserPool

  WebClient: 
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref CognitoUserPool
      ClientName: !Sub ${applicationName}-web-client
      GenerateSecret: true
      AccessTokenValidity: 60
      IdTokenValidity: 60
      RefreshTokenValidity: 30
      TokenValidityUnits:
        AccessToken: "minutes"
        IdToken: "minutes"
        RefreshToken: "days"
    DependsOn:
      - CognitoUserPool

  CognitoGrant:
    Type: "AWS::Cognito::UserPoolUser"
    Properties:
      Username: "gmoore@makpar.com"
      UserPoolId: !Ref CognitoUserPool
      UserAttributes:
        - Name: "email"
          Value: "gmoore@makpar.com"
        - Name: "name"
          Value: "Grant Moore"
    DependsOn:
        - CognitoUserPool

Outputs:
  CognitoUserPoolArn:
    Value: !GetAtt CognitoUserPool.Arn
    Description: User Pool ARN for Cognito
    Export:
      Name: !Sub ${AWS::StackName}-UserPoolArn
  CognitoUserPoolID:
    Value: !Ref CognitoUserPool
    Description: User Pool ID for Cognito
    Export:
      Name: !Sub ${AWS::StackName}-UserPoolID
  CognitoClientID:
    Value: !Ref APIClient
    Description: Client ID for API Client
    Export:
      Name: !Sub ${AWS::StackName}-APIClientID